<launch>

  <arg name="model" default="$(find xacro)/xacro '$(find car_model)/urdf/zhongqi.xacro'" />
  <param name="robot_description" command="$(arg model) roboname:='smart'" />
  
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
  <!--include file = "$(find rosbridge_server)/launch/rosbridge_websocket.launch"/-->
  
 15   <!--node name="zhongqi_driver" pkg="zhongqi_driver" type="zhongqi_driver_node" output="screen">
 17     <param name="port_name" value="/dev/ttyS0" />
 18     <param name="control_rate" value="10" />
 19     <param name="check_pos_rate" value="1" />
 20     <param name="baud_rate" value="115200" />
 21     <param name="wheelbase" value="1.07" />
 22     <param name="tread" value="0.685" />
 23     <param name="wheel_diameter" value="0.37" />
 24     <param name="maxsteer" value="0" />
 25     <param name="steer_radius" value="true" />
 26     <param name="publish_tf" value="true" />
 27     <param name="check" value="false" />
 28     <param name="odom_frame" value="wheel_odom"/>
 29     <param name="base_frame" value="base_link"/>
 30     <param name="vth_c" value="1.0" />
 31     <param name="vx_c" value="1.146" />
 32     <param name="vy_c" value="1" />
 33     <param name="vth_c" value="1" />
 34   </node-->
 
   <!--q:0.002; q:0.43-->
   <node name="kf_pose_node" pkg="position_optimization" type="pose_kf_node" output="screen" >
    <param name="q" value="0.001" />
    <param name="r" value="1000" />
    <param name="wpa" value="0.8" />
    <param name="wpu" value="0.2" />
    <param name="wya" value="0.8" />
    <param name="wyu" value="0.2" />
    <param name="pm2o" value="false" />
    <param name="odom_frame" value="odom" />
    <param name="base_frame" value="base_footprint" />
    <param name="map_frame" value="map" />
  </node>
  
 <!--launch-prefix="xterm -e gdb -ex run -\\-args"-->
  <node name="u2o_node" pkg="position_optimization" type="position_optimization_node" output="screen" >
    <param name="pos_topic" value="ku_pos" /> <!--carpos, ku_pos-->
    <param name="odom_frame" value="odom" />
    <param name="base_frame" value="base_footprint" />
    <param name="map_frame" value="tag_map" />
    <param name="file_name" value="/home/autolabor/car_data/transfrom" />
    <param name="control_rate" value="3.0" />
    <param name="publish_tf" value="false" />
    <param name="optimization" value="true" />
  </node>
  
  <node name="cmd_vel_to_ackermann" pkg="zhongqi_driver" type="cmd_vel_to_ackermann_drive.py" output="screen"  >
  <param name="p" type="double" value="0.08" />
  <param name="i" type="double" value="0.06" />
  <param name="d" type="double" value="0.02" />
  </node>
  
  <!--node name="keyboard_control" pkg="keyboard_control" type="keyboard_control_node" output="screen">
    <param name="linear_init" value="0.0" />
    <param name="linear_max" value="1" />
    <param name="linear_step" value="0.05" />

    <param name="angular_init" value="1" />
    <param name="angular_max" value="1" />
    <param name="angular_step" value="0.1" />
  </node-->
  
  <!--node pkg="tf2_ros" type="static_transform_publisher" name="link1_broadcaster" 
    args="1 0 0 0 0 0 1 odom car" /--> 
      
  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find zhongqi_driver)/rviz/smart.rviz" />
</launch>
